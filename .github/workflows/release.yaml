on:
  push:
    tags:
      - "*.*.*"

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Install Python requirements
        run: "python -m pip install -r .github/workflows/release/extract_changelog_requirements.txt"

      # Fetch variables
      - name: Extract version from tag
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Fetch changelog for release description
        id: get_changelog
        run: "python .github/workflows/release/extract_changelog.py ${{ steps.get_version.outputs.VERSION }}"

      # Generate artifact
      - name: Create release artifact (zip)
        id: create_zip
        run: |
          cp README.md README.txt
          cp LICENSE.md LICENSE.txt
          zip release-artifact.zip SimpleGangWar.cs SimpleGangWar.ini README.txt LICENSE.txt

      # Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: "v${{ github.ref }}"
          body_path: changelog_generated.md
          draft: false
          prerelease: false
      - name: Upload release asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./release-artifact.zip"
          asset_name: "GTAV-SimpleGangWar-${{ steps.get_version.outputs.VERSION }}.zip"
          asset_content_type: "application/zip"
